Q1. Spiral Matrix II
class Solution {
    public int[][] generateMatrix(int n) {
        int[][] ans = new int[n][n];
        //right -> bottom -> left -> top
        int top = 0, left = 0;
        int bottom = n-1, right = n-1;
        int k = 1;
        while(top<=bottom && left<=right){
            //right
            for(int i=left;i<=right;i++){
                ans[top][i] = k++ ;
            }
            top++;
            //bottom
            for(int i=top;i<=bottom;i++){
                ans[i][right] = k++;
            }
            right--;
            if(top<=bottom){
                //left
                for(int i=right;i>=left;i--){
                    ans[bottom][i] = k++;
                  }
                 bottom--;
            }
            if(left<=right){
                //top
                for(int i=bottom;i>=top;i--){
                    ans[i][left] = k++;
                }  
                left++;
            }
            
        }
        
        return ans;
    
    }
}

2.Richest Customer Wealth
class Solution {
    public int maximumWealth(int[][] nums) {
        int sum = 0;

        for(int i=0; i<nums.length; i++){
            int temp = 0;
            for(int j=0; j<nums[i].length; j++){
                temp +=nums[i][j];
            }
            sum = Math.max(sum, temp);
        }
        return sum;
    }
}
3.Toeplitz Matrix
class Solution {
    public boolean isToeplitzMatrix(int[][] matrix) {
        for(int i=1; i<matrix.length; i++){
            for(int j=1; j<matrix[0].length; j++){
                if(matrix[i][j] != matrix[i-1][j-1])
                    return false;
            }
        }
        
        return true;
    }
}
4.Count Negative Numbers in a Sorted Matrix
class Solution {
    public int countNegatives(int[][] grid) {
        int count=0;
        for(int i=0;i<grid.length;i++){
             for(int j=0;j<grid[0].length;j++){
                 if(grid[i][j] < 0)
                 count++;
             }
        }
        return count;
    }
}

5.Set Matrix Zeroes
class Solution {
    public void setZeroes(int[][] matrix) {
        Set<Integer> row = new HashSet<>();
        Set<Integer> col = new HashSet<>();
        for(int i = 0; i < matrix.length; i++){
            for(int j = 0; j < matrix[0].length; j++){
                if(matrix[i][j] == 0){
                    row.add(i);
                    col.add(j);
                }
            }
        }
        for(int r : row){
            for(int i = 0; i < matrix[0].length; i++){
                matrix[r][i] = 0;
            }
        }
        for(int c : col){
            for(int i = 0; i < matrix.length; i++){
                matrix[i][c] = 0;
            }
        }
    }
}
